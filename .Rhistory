coord_fixed() +
theme_void() +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
library(tidyverse)
library(tidylog)
library(data.table)
db1979 <- fread('~/Downloads/Mortalidade_Geral_1979.csv')
db1979 %>% names
db1979 <-
db1979 %>% select(DATAOBITO, DATANASC, IDADE, SEXO, MUNIOCOR, MUNIRES, CAUSABAS)
View(db1979)
## 711742 / 46
db1989 <- fread('~/Downloads/Mortalidade_Geral_1989.csv')
db1989 %>% names
## 711742 / 46
db1979 <- fread('~/Downloads/Mortalidade_Geral_1979.csv')
db1979 <-
db1979 %>% select(DATAOBITO, DATANASC, IDADE, SEXO, MUNIOCOR, MUNIRES, CAUSABAS, LOCOCOR)
View(db1989)
db1989 <-
db1989 %>% select(DATAOBITO, DATANASC, IDADE, SEXO, MUNIOCOR, MUNIRES, CAUSABAS,LOCOCOR)
## 815774 / 46
db1999 <- fread('~/Downloads/Mortalidade_Geral_1999.csv')
db1999 %>% names
db1999 <-
db1999 %>% select(DTOBITO, DTNASC, IDADE, SEXO, RACACOR,LOCOCOR,
CODMUNOCOR, CODMUNRES, CAUSABAS,contains('LINHA'))
db1999 %>% count(RACACOR)
db1999 %>% count(CODMUNRES) %>% View
db1979 %>% count(CODMUNRES) %>% View
db1979 %>% count(MUNIRES) %>% View
## 938658 / 39
db2009 <- fread('~/Downloads/Mortalidade_Geral_2009.csv')
db2009 %>% names
2009 <-
db2009 %>% select(DTOBITO, HORAOBITO, LOCOCOR, CAUSABAS,contains('LINHA'),
DTNASC, IDADE, SEXO, RACACOR, ESC,
CODMUNOCOR, CODMUNRES)
db2009 <-
db2009 %>% select(DTOBITO, HORAOBITO, LOCOCOR, CAUSABAS,contains('LINHA'),
DTNASC, IDADE, SEXO, RACACOR, ESC,
CODMUNOCOR, CODMUNRES)
## 711742 / 46
db1979 <- fread('~/Downloads/Mortalidade_Geral_1979.csv')
db1979 %>% count(INSTRUCAO)
db1979 <-
db1979 %>% select(DATAOBITO, CAUSABAS, LOCOCOR,
DATANASC, IDADE, SEXO, INSTRUCAO,
MUNIOCOR, MUNIRES)
## 815774 / 46
db1989 <- fread('~/Downloads/Mortalidade_Geral_1989.csv')
db1989 <-
db1989 %>% select(DATAOBITO, CAUSABAS,LOCOCOR,
DATANASC, IDADE, SEXO, INSTRUCAO,
MUNIOCOR, MUNIRES,)
## 938658 / 39
db1999 <- fread('~/Downloads/Mortalidade_Geral_1999.csv')
db1999 <-
db1999 %>% select(DTOBITO, CAUSABAS,contains('LINHA'),
DTNASC, IDADE, SEXO, RACACOR,LOCOCOR,ESC,
CODMUNOCOR, CODMUNRES)
## 1,103,088 / 53
db2009 <- fread('~/Downloads/Mortalidade_Geral_2009.csv')
db2009 <-
db2009 %>% select(DTOBITO, HORAOBITO, LOCOCOR, CAUSABAS,CAUSABAS_O,contains('LINHA'),
DTNASC, IDADE, SEXO, RACACOR, ESC,
CODMUNOCOR, CODMUNRES)
db1979 %>% distinct(MUNIRES)
db1989 %>% distinct(MUNIRES)
db1999 %>% distinct(MUNIRES)
db1999 %>% distinct(CODMUNRES)
library(microdatasus)
library(microdatasus)
microdatasus::fetch_datasus(year_start = 2025, year_end = 2025,
uf = 'SP',
month_start = 1, month_end = 6,
information_system = 'SINAN-Dengue')
microdatasus::fetch_datasus(year_start = 2025, year_end = 2025,
uf = 'SP',
month_start = 1, month_end = 6,
information_system = 'SINAN-DENGUE')
db <-
microdatasus::fetch_datasus(year_start = 2025, year_end = 2025,
uf = 'SP',
month_start = 1, month_end = 6,
information_system = 'SINAN-DENGUE')
library(tidyverse)
library(tidylog)
db %>%
count(SOROTIPO)
db %>% filter(SG_UF=='SP')
db %>% filter(SG_UF=='35')
db %>% filter(SG_UF=='35') %>% count(SOROTIPO)
db %>% filter(SG_UF=='35') %>%
filter(NU_IDADE_N>=10, NU_IDADE_N<=14) %>%
count(SOROTIPO)
db %>% count(NU_IDADE_N)
db %>%
filter(SG_UF=='35') %>%
dplyr::mutate(
NU_IDADE_N = dplyr::case_match(
.data$NU_IDADE_N,
999 ~ NA,
.default = .data$NU_IDADE_N
)
) %>%
# Codigo e valor
dplyr::mutate(
idade_cod = substr(.data$NU_IDADE_N, 1, 1),
idade_value = as.numeric(substr(.data$NU_IDADE_N, 2, 3)),
) %>%
dplyr::mutate(
IDADEminutos = dplyr::case_match(
.data$idade_cod,
"0" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEhoras = dplyr::case_match(
.data$idade_cod,
"1" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEdias = dplyr::case_match(
.data$idade_cod,
"2" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEmeses = dplyr::case_match(
.data$idade_cod,
"3" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEanos = dplyr::case_match(
.data$idade_cod,
"4" ~ idade_value,
"5" ~ idade_value + 100,
.default = NA
)
) %>%
filter(IDADEanos>=10, IDADEanos<=14) %>%
count(SOROTIPO)
db %>%
filter(SG_UF=='35') %>%
dplyr::mutate(
NU_IDADE_N = dplyr::case_match(
.data$NU_IDADE_N,
999 ~ NA,
.default = .data$NU_IDADE_N
)
) %>%
# Codigo e valor
dplyr::mutate(
idade_cod = substr(.data$NU_IDADE_N, 1, 1),
idade_value = as.numeric(substr(.data$NU_IDADE_N, 2, 3)),
) %>%
dplyr::mutate(
IDADEminutos = dplyr::case_match(
.data$idade_cod,
"0" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEhoras = dplyr::case_match(
.data$idade_cod,
"1" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEdias = dplyr::case_match(
.data$idade_cod,
"2" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEmeses = dplyr::case_match(
.data$idade_cod,
"3" ~ idade_value,
.default = NA
)
) %>%
dplyr::mutate(
IDADEanos = dplyr::case_match(
.data$idade_cod,
"4" ~ idade_value,
"5" ~ idade_value + 100,
.default = NA
)
) %>%
count(IDADEanos)
db %>% names
db %>%
filter(SG_UF=='35') %>%
count(ANO_NASC)
2025-10
2025-14
db %>%
filter(SG_UF=='35') %>%
filter(ANO_NASC>=2010, ANO_NASC<=2015) %>%
count(SOROTIPO)
db %>%
filter(SG_UF=='35') %>%
filter(ANO_NASC>=2009, ANO_NASC<=2015) %>%
count(SOROTIPO)
install.packages("rentrez")
library(tidyverse)
library(tidylog)
library(rcrossref)
library(scholar)
library(tidytext)
library(wordcloud2)
library(rentrez)
my_id <- "fXwnz6AAAAAJ"
# List all publications
pubs <- get_publications(my_id)
# Inspect
head(pubs)
## citations
# Example: look for guidelines that cite "Ranzani" papers
query <- '("Practice Guideline"[pt] OR "Consensus Development Conference"[pt] OR guideline[ti]) AND Ranzani[author]'
search_results <- entrez_search(db="pubmed", term=query, retmax=50)
search_results$ids
# Fetch details
records <- entrez_summary(db="pubmed", id=search_results$ids)
titles <- sapply(records, function(x) x$title)
titles
## citations
# Example: look for guidelines that cite "Ranzani" papers
query <- '("Practice Guideline"[pt] OR "Consensus Development Conference"[pt] OR guideline[ti]) AND Ranzani O[author]'
search_results <- entrez_search(db="pubmed", term=query, retmax=50)
search_results$ids
# Fetch details
records <- entrez_summary(db="pubmed", id=search_results$ids)
titles <- sapply(records, function(x) x$title)
titles
# ---- STEP 2: Try to match publications to DOIs ----
get_doi_from_title <- function(title) {
res <- try(cr_works(query = title, limit = 1), silent = TRUE)
if (inherits(res, "try-error") || is.null(res$data) || nrow(res$data) == 0) return(NA)
res$data$doi[1]
}
pubs$doi <- map_chr(pubs$title, get_doi_from_title)
pubs$doi
View(pubs)
pubs$title
# ---- STEP 1: Get your DOIs from ORCID ----
orcid_id <- "0000-0002-XXXX-YYYY"  # <<-- put your ORCID here
# ---- STEP 1: Get your DOIs from ORCID ----
orcid_id <- "0000-0002-4677-6862"  # <<-- put your ORCID here
works <- orcid_works(orcid_id)
install.packages("rorcid")
library(rorcid)
works <- orcid_works(orcid_id)
works <- orcid_works(orcid_id)
# Extract DOIs
pubs <- works %>%
orcid_works() %>%
orcid_works_doi()
View(works)
works %>%
orcid_works()
View(works)
works[["0000-0002-4677-6862"]]
works <- works(orcid_id)
# Extract DOIs
dois <- works %>% identifiers("doi")
# ---- STEP 2: For each DOI, get citing works ----
get_citing_dois <- function(doi) {
citing <- try(cr_citation_count(doi, works = TRUE), silent = TRUE)
if (inherits(citing, "try-error") || is.null(citing$data)) return(NULL)
citing$data
}
get_citing_dois(dois[1])
??cr_citation_count
get_citing_dois(dois[100])
View(works)
works %>% filter(str_detect(title.title.value,'sepsis'))
View(works[[19]][[127]])
get_citing_dois(10.1007/s00134-013-3131-5
)
get_citing_dois('10.1007/s00134-013-3131-5')
cr_citation_count(10.1007/s00134-013-3131-5)
cr_citation_count('10.1007/s00134-013-3131-5')
cr_citation_count('10.1007/s00134-013-3131-5',works=T)
cr_citation('10.1007/s00134-013-3131-5',works=T)
cr_citation('10.1007/s00134-013-3131-5')
cr_cn('10.1007/s00134-013-3131-5')
install.packages("openalexR")
openalexR::oa_fetch(identifier = '10.1007/s00134-013-3131-5')
openalexR::oa_fetch(entity = 'works',identifier = '10.1007/s00134-013-3131-5')
oa_fetch(
entity = "works",
doi = c(
"10.1371/journal.pone.0266781",
"10.1371/journal.pone.0267149"
),
verbose = TRUE,
count_only = TRUE
)
library(openalexR)
oa_fetch(
entity = "works",
doi = c(
"10.1371/journal.pone.0266781",
"10.1371/journal.pone.0267149"
),
verbose = TRUE,
count_only = TRUE
)
devtools::install_github("DigitalScience/dimensionsR")
install.packages("devtools")
devtools::install_github("DigitalScience/dimensionsR")
install.packages("dimensionsR")
library(dimensionsR)
#### DIMENSIONS ####
ds_authenticate()
library(dimensionsR)
#### DIMENSIONS ####
ds_authenticate()
altmetric(doi = '10.1007/s00134-013-3131-5')
altmetric(doi = '10.1007/s00134-013-3131-5') %>% View
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>% pivot_longer()
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>% pivot_longer(cols=everything())
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>% View
altmetric(doi = '10.1016/s2213-2600(20)30560-9',
names_to = "test", values_to = "test2",
values_ptypes = list(test2=character()))
values_ptypes = list(test2=character())
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>%
pivot_longer(cols = everything(),
names_to = "test", values_to = "test2",
values_ptypes = list(test2=character()))
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>% View
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>% select(score)
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>%
pivot_longer(cols = everything(),
names_to = "test", values_to = "test2",
values_ptypes = list(test2=as.character()))
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>% select(score) %>% glimpse
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>%
as.data.frame(t())
altmetric(doi = '10.1016/s2213-2600(20)30560-9') %>%
as.data.frame(t(.))
altmetric(doi = '10.1016/s2213-2600(20)30560-9') ->a
data.frame(V1=names(a), V2=unname(t(a)))
data.frame(V1=names(a), V2=unname(t(a))) %>% View
a %>% select(contains('polic'))
altmetric(doi = '10.1136/bmj.n2015') ->a
data.frame(V1=names(a), V2=unname(t(a))) %>% View
# ---- STEP 1: Get your DOIs from ORCID ----
orcid_id <- "0000-0002-4677-6862"  # <<-- put your ORCID here
works <- works(orcid_id)
# Extract DOIs
dois <- works %>% identifiers("doi")
dimensions <- list()
for (d in 3) {
temp <- altmetric(dois[d])
dimensions[[d]] <-temp
}
dimensions <- bind_rows(dimensions)
View(dimensions)
dimensions <- list()
for (d in 1:3) {
temp <- altmetric(dois[d])
dimensions[[d]] <-temp
}
dimensions <- list()
for (d in 10) {
temp <- altmetric(dois[d])
dimensions[[d]] <-temp
}
dimensions <- bind_rows(dimensions)
View(dimensions)
dimensions <- list()
for (d in length(dois)) {
temp <- altmetric(dois[d])
dimensions[[d]] <-temp
}
dimensions <- list()
for (d in 1:length(dois)) {
temp <- altmetric(dois[d])
dimensions[[d]] <-temp
}
dimensions <- map(dois, function(d) {
res <- altmetric(d)
if (!is.null(res) && nrow(res) > 0) {
return(res)
} else {
return(NULL)  # skip empty
}
})
dois
dimensions <- map(dois, function(d) {
res <- altmetric(d)
if (!is.null(res) && nrow(res) > 0) {
return(res)
} else {
return(NULL)  # skip empty
}
})
dimensions <- map(dois, function(d) {
res <- tryCatch(altmetric(d), error = function(e) NULL)
# Skip nulls or non-results
if (is.null(res)) return(NULL)
# Coerce to tibble safely (convert list → data.frame)
res_df <- as.data.frame(res, stringsAsFactors = FALSE)
if (nrow(res_df) > 0) {
return(res_df)
} else {
return(NULL)
}
})
dimensions <- bind_rows(dimensions)
View(dimensions)
dimensions %>% count(cited_by_patents_count)
dimensions %>% filter(!is.na(cited_by_patents_count))
dimensions %>% filter(!is.na(cited_by_patents_count)) %>% select(title)
dimensions %>% count(cited_by_patents_count)
dimensions %>% count(cited_by_policies_count)
dimensions %>% filter(!is.na(cited_by_policies_count)) %>% select(title)
View(works)
works %>% group_by(title) %>% filter(n()>1)
works %>% names
works %>% group_by(title.title.value) %>% filter(n()>1)
works %>% group_by(title.title.value) %>% filter(n()>1) %>% View
# ---- STEP 1: Get your DOIs from ORCID ----
orcid_id <- "0000-0002-4677-6862"  # <<-- put your ORCID here
works <- works(orcid_id)
works %>% distinct()
articles <- works(orcid_id)
articles %>% distinct()
View(articles)
articles %>% distinct(title.title.value, .keep_all=T)
# Extract DOIs
dois <- works %>% identifiers("doi")
# Extract DOIs
dois <- articles %>% identifiers("doi")
# Extract DOIs
dois <- articles %>% identifiers("doi") %>% unique()
dimensions <- map(dois, function(d) {
res <- tryCatch(altmetric(d), error = function(e) NULL)
# Skip nulls or non-results
if (is.null(res)) return(NULL)
# Coerce to tibble safely (convert list → data.frame)
res_df <- as.data.frame(res, stringsAsFactors = FALSE)
if (nrow(res_df) > 0) {
return(res_df)
} else {
return(NULL)
}
})
dimensions <- bind_rows(dimensions)
dimensions %>% count(cited_by_patents_count)
dimensions %>% filter(!is.na(cited_by_patents_count)) %>% select(title)
dimensions %>% count(cited_by_policies_count)
dimensions %>% filter(!is.na(cited_by_policies_count)) %>% select(title)
altmetric(doi = '10.1016/j.ijheh.2024.114473') ->a
View(a)
dimensions %>% count(cited_by_patents_count)
dimensions %>% filter(!is.na(cited_by_patents_count)) %>% select(title)
dimensions %>% filter(!is.na(cited_by_patents_count)) %>% View
dimensions %>% count(cited_by_patents_count)
dimensions %>% count(cited_by_policies_count)
dimensions %>% filter(!is.na(cited_by_policies_count)) %>% select(title) %>% count()
library(tidyverse)
library(tidylog)
library(rcrossref)
library(scholar)
library(tidytext)
library(wordcloud2)
library(rentrez)
library(rorcid)
library(openalexR)
library(dimensionsR)
# ---- STEP 1: Get your DOIs from ORCID ----
orcid_id <- "0000-0002-4677-6862"  # <<-- put your ORCID here
articles <- works(orcid_id)
View(articles)
# Extract DOIs
dois <- articles %>% identifiers("doi") %>% unique()
dimensions <- map(dois, function(d) {
res <- tryCatch(altmetric(d), error = function(e) NULL)
# Skip nulls or non-results
if (is.null(res)) return(NULL)
# Coerce to tibble safely (convert list → data.frame)
res_df <- as.data.frame(res, stringsAsFactors = FALSE)
if (nrow(res_df) > 0) {
return(res_df)
} else {
return(NULL)
}
})
dimensions <- bind_rows(dimensions)
dimensions %>% count(cited_by_patents_count)
dimensions %>% filter(!is.na(cited_by_patents_count)) %>% select(title)
dimensions %>% count(cited_by_policies_count)
dimensions %>% count(cited_by_videos_count)
dimensions %>% count(cited_by_guidelines_count)
dimensions %>% filter(!is.na(cited_by_guidelines_count)) %>% select(title) %>% count()
dimensions %>% filter(!is.na(cited_by_guidelines_count)) %>% select(title) %>% count()
dimensions %>% count(cited_by_wikipedia_count)
dimensions %>% filter(!is.na(cited_by_wikipedia_count)) %>% select(title) %>% count()
